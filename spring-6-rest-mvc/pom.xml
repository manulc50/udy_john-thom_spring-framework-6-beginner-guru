<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.mlorenzo</groupId>
	<artifactId>spring-6-rest-mvc</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-6-rest-mvc</name>
	<description>Spring 6 REST MVC</description>

	<properties>
		<java.version>17</java.version>
		<mapstruct.version>1.5.2.Final</mapstruct.version>
		<springdoc.version>2.0.2</springdoc.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.atlassian.oai</groupId>
			<artifactId>swagger-request-validator-restassured</artifactId>
			<version>2.32.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-mysql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>5.7.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- La tarea o "goal" "start" de este plugin se ejecuta en el momento previo a la fase o
					 etapa "integration-test" de Maven y la tarea o "goal" "stop" se ejecuta el el momento
					 posterior a dicha etapa o fase de Maven. La tarea "start" incia la aplicación Spring Boot
					 y la tarea "stop" la finaliza -->
				<executions>
					<execution>
						<!-- Nota: Este id no es más que una etiqueta que nos permite ver o identificar(por consola)
						     cuando se ejecutan las tareas o "goals" especificadas aquí -->
						<id>springdoc</id>
						<!-- La tarea "generate" del plugin "springdoc-openapi-maven-plugin" necesita levantar la
						     aplicación Spring Boot para poder obtener la documentación OpenAPI duanante la etapa o
						     fase "integration-test de Maven -->
						<goals>
							<goal>start</goal>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Este plugin genera un archivo, por defecto llamado "openapi.json", en la raíz del directorio "target"
			     con la documentación OpenAPI obtenida desde una url(la tenemos que indicar). Su tarea o "goal"
			     "generate" es la encargada de realizar este procedimiento y se dispara cuando se produce la fase o
			     etapa "integration-test" de Maven. Dicha fase también ocurre en la fase o etapa "verify" de Maven-->
			<plugin>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-maven-plugin</artifactId>
				<version>1.4</version>
				<!-- Tenemos que indicar a este plugin la url donde se obtiene la documentación("/v3/api-docs" si la
				     queremos en formato Json, o "/v3/api-docs.yaml" si la queremos en formato Yaml) -->
				<configuration>
					<apiDocsUrl>http://localhost:8081/v3/api-docs.yaml</apiDocsUrl>
					<!-- Cambiamos el nombre del archivo generado(por defecto es "openapi.json") a "oa3.yml" -->
					<outputFileName>oa3.yml</outputFileName>
				</configuration>
				<executions>
					<!-- Nota: Este id no es más que una etiqueta que nos permite ver o identificar(por consola)
						     cuando se ejecutan las tareas o "goals" especificadas aquí -->
					<execution>
						<id>springdoc-integration-test</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<!-- Versión proporcionada por Spring Boot -->
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>0.2.0</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<compilerArg>-Amapstruct.defaultComponentModel=spring</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>
			<!-- Para ejecutar las pruebas de integración en las etapas "verify" e "integration-test" -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
